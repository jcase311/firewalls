#!/bin/bash
# chkconfig: 345 30 99
# description: Starts and stops iptables based firewall

startFirewall()
{

echo -n "Starting Firewall.." 

MY_BROADCAST="`ifconfig -a eth0 | grep "inet addr:" | awk '{print $3}' | sed 's/Bcast://g'`"
MY_TCP_OUT="22,80,443"
MY_UDP_OUT="53,123"
DPORT="1024:65535"

MY_NETS=" \
x.x.x.x \
"

SSH_CLIENTS=" \
${MY_NETS} \
"

######################################################
# Modules
modprobe ip_tables
modprobe ip_conntrack
modprobe ip_conntrack_ftp

######################################################
# Flush
iptables -F
iptables -X
iptables -Z

######################################################
# Policy
iptables -P INPUT DROP
iptables -P OUTPUT DROP
iptables -P FORWARD DROP

######################################################
# Kernel
echo '0' > /proc/sys/net/ipv4/ip_forward
# syn cookies
echo '1' > /proc/sys/net/ipv4/tcp_syncookies
# Explicit congestion notificantion not universally supported
echo '0' > /proc/sys/net/ipv4/tcp_ecn

# source-route (is default)
echo '0' > /proc/sys/net/ipv4/conf/all/accept_source_route
# icmp redirects (is default)
echo '0' > /proc/sys/net/ipv4/conf/all/accept_redirects
echo '1' > /proc/sys/net/ipv4/conf/all/log_martians

#echo '1' > /proc/sys/net/ipv4/conf/all/rp_filter
echo '0' > /proc/sys/net/ipv4/conf/all/bootp_relay
echo '0' > /proc/sys/net/ipv4/conf/all/accept_source_route
echo '0' > /proc/sys/net/ipv4/conf/all/accept_redirects

echo '1' > /proc/sys/net/ipv4/icmp_ignore_bogus_error_responses
# allow pinging us. Disable by setting to '1'
echo '0' > /proc/sys/net/ipv4/icmp_echo_ignore_all

echo '0' > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts
echo '5' > /proc/sys/net/ipv4/icmp_ratelimit

# Reduce dos'ing with reduced timeouts and kill timestamps
echo 30 > /proc/sys/net/ipv4/tcp_fin_timeout
echo 2400 > /proc/sys/net/ipv4/tcp_keepalive_time
echo 1280 > /proc/sys/net/ipv4/tcp_max_syn_backlog
echo 0 > /proc/sys/net/ipv4/tcp_window_scaling
echo 0 > /proc/sys/net/ipv4/tcp_sack
echo 0 > /proc/sys/net/ipv4/tcp_timestamps
echo 655200 > /proc/sys/net/netfilter/nf_conntrack_max
echo 3600 > /proc/sys/net/netfilter/nf_conntrack_tcp_timeout_established
######################################################
# LOOPBACK RULES
iptables -A INPUT -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT

######################################################
# SYN FLOOD RULES
# Can enable these if needed, but syncookies are better
# WARNING: this rate is a bit restrictive.
#iptables -N syn-flood
#iptables -A INPUT -p tcp --syn -j syn-flood
#iptables -A syn-flood -m limit --limit 1/s --limit-burst 4 -j RETURN
#iptables -A syn-flood -j DROP

######################################################
# new must be SYN
iptables -A INPUT -p tcp ! --syn -m state --state NEW -j DROP
# Syn/fin/rst cannot occur together. Fin, psh, urg only with ack.
iptables -A INPUT -p tcp --tcp-flags SYN,FIN SYN,FIN -j DROP
iptables -A INPUT -p tcp --tcp-flags SYN,RST SYN,RST -j DROP
iptables -A INPUT -p tcp --tcp-flags RST,FIN RST,FIN -j DROP
iptables -A INPUT -p tcp --tcp-flags ACK,FIN FIN -j DROP
iptables -A INPUT -p tcp --tcp-flags ACK,PSH PSH -j DROP
iptables -A INPUT -p tcp --tcp-flags ACK,URG URG -j DROP

######################################################
# FRAGMENT RULES
iptables -A INPUT -f -j DROP

######################################################
# BROADCAST
#iptables -A INPUT -d ${MY_BROADCAST} -j DROP

######################################################
# Outbound TCP/UDP
iptables -A OUTPUT -p tcp --sport $DPORT -m multiport --dports $MY_TCP_OUT -m state --state NEW,ESTABLISHED -j ACCEPT
iptables -A INPUT  -p tcp --dport $DPORT -m multiport --sports $MY_TCP_OUT -m state --state ESTABLISHED -j ACCEPT
iptables -A OUTPUT -p udp --sport $DPORT -m multiport --dports $MY_UDP_OUT -m state --state NEW,ESTABLISHED -j ACCEPT
iptables -A INPUT  -p udp --dport $DPORT -m multiport --sports $MY_UDP_OUT -m state --state ESTABLISHED -j ACCEPT

######################################################
# NTP
iptables -A OUTPUT -p udp --sport 123 -m multiport --dports $MY_UDP_OUT -m state --state NEW,ESTABLISHED -j ACCEPT
iptables -A INPUT  -p udp --dport 123 -m multiport --sports $MY_UDP_OUT -m state --state ESTABLISHED -j ACCEPT

######################################################
# Inbound SSH access
for i in ${SSH_CLIENTS}; do
  iptables -A INPUT  -p tcp -s ${i} --dport 22 --sport $DPORT -m state --state NEW,ESTABLISHED -j ACCEPT
  iptables -A OUTPUT -p tcp -d ${i} --sport 22 --dport $DPORT -m state --state ESTABLISHED -j ACCEPT
done 

######################################################
# DNS in
iptables -A OUTPUT -p udp --sport 53 -m state --state ESTABLISHED -j ACCEPT
iptables -A INPUT -p udp --dport 53 -m state --state NEW,ESTABLISHED -j ACCEPT

iptables -A OUTPUT -p tcp --sport 53 -m state --state ESTABLISHED -j ACCEPT
iptables -A INPUT -p tcp --dport 53 -m state --state NEW,ESTABLISHED -j ACCEPT

######################################################
# TRACEROUTE ANYWHERE
iptables -A OUTPUT -p udp --sport 1024:65535 --dport 33434:33523 -m state --state NEW -j ACCEPT

######################################################
# ICMP OUT
iptables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT

# ICMP (related, e.g. traceroute; established, e.g. echo-reply)
iptables -A INPUT -p icmp -m state --state ESTABLISHED,RELATED -j ACCEPT

# ICMP INCOMING
for i in ${MY_NETS}; do
  iptables -A INPUT -p icmp --icmp-type echo-request -s $i -m limit --limit 5/s --limit-burst 10 -j ACCEPT
done

######################################################
# Windows and bootp crap
iptables -A INPUT -p tcp --dport 67:68 -j DROP
iptables -A INPUT -p udp --dport 67:68 -j DROP
iptables -A INPUT -p tcp --dport 137:139 -j DROP
iptables -A INPUT -p udp --dport 137:139 -j DROP

######################################################


iptables -A INPUT -j DROP
iptables -A OUTPUT -j DROP

} # End of start firewall

stopFirewall ()
{

echo -n "Stopping Firewall.."
iptables -F
iptables -P FORWARD DROP
iptables -P OUTPUT ACCEPT
iptables -P INPUT ACCEPT
echo "done"

}

case "$1" in
   start)
      startFirewall
      echo "done"
   ;;
   restart)
      stopFirewall && startFirewall
      echo "done"
   ;;
   stop)
      stopFirewall
   ;;
   *)
      echo "Usage: $0 {start|stop|restart}"
      exit 1
   ;;
esac
